// Code automatically generated by "Generate_Cone_Mapping_Model" script by Jolyon Troscianko

//Model fits:
//uvR2 0.999058139248318
//swR2 0.999855874266332
//mwR2 0.999471107059537
//lwR2 0.99825248466685
//dblR2 0.999686802971544

// Modelled based on Natural Spectra 300-700 database, containing 3139 spectra.

// Generated: 2016/1/22   16:38:19


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class NX1000_Nikkor_EL_80mm_Bluetit_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

float[] vR;
float[] vG;
float[] vB;
float[] uB;
float[] uR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] uv = new float[dimension];
float[] sw = new float[dimension];
float[] mw = new float[dimension];
float[] lw = new float[dimension];
float[] dbl = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);
uB = (float[]) stack.getPixels(4);
uR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
uv[i] = (float) ( 27.6902935531119 + vR[i] * 0.0136929054230641 + vG[i] * -0.0503240629011846 + vB[i] * 0.0994308305503702 + uB[i] * 0.347415645551853 + uR[i] * 0.577069479064441 + vR[i]*vG[i] * -2.9236090144859e-07 + vR[i]*vB[i] * 5.9181845991617e-07 + vR[i]*uB[i] * -5.60509388317729e-08 + vR[i]*uR[i] * -1.7541907650477e-06 + vG[i]*vB[i] * -5.88207300990002e-07 + vG[i]*uB[i] * -8.18427256822687e-06 + vG[i]*uR[i] * 1.0439859175824e-05 + vB[i]*uB[i] * 1.26809966852159e-05 + vB[i]*uR[i] * -1.21047549257743e-05 + uB[i]*uR[i] * -5.87041771539627e-07);
sw[i] = (float) ( 5.21676772444761 + vR[i] * -0.0661409071255679 + vG[i] * -0.213282630437858 + vB[i] * 1.24084681813858 + uB[i] * 0.0933879098515155 + uR[i] * -0.0639219040582711 + vR[i]*vG[i] * -3.63388685913282e-07 + vR[i]*vB[i] * 6.96571995153933e-07 + vR[i]*uB[i] * -3.24417830328347e-06 + vR[i]*uR[i] * 3.26892264175548e-06 + vG[i]*vB[i] * -2.54198090527609e-07 + vG[i]*uB[i] * 8.92321242498661e-07 + vG[i]*uR[i] * -2.1240664835898e-06 + vB[i]*uB[i] * 3.42821937224373e-06 + vB[i]*uR[i] * -2.25507907609958e-06 + uB[i]*uR[i] * 1.26313317293913e-07);
mw[i] = (float) ( 303.46573992356 + vR[i] * -0.224787924668618 + vG[i] * 1.56227795116735 + vB[i] * -0.359691360964703 + uB[i] * 0.00739206145803599 + uR[i] * -0.0030406244111753 + vR[i]*vG[i] * 9.74536316469456e-08 + vR[i]*vB[i] * 1.36873818119465e-06 + vR[i]*uB[i] * -1.33543635301769e-06 + vR[i]*uR[i] * 7.71295572255709e-07 + vG[i]*vB[i] * -1.78803582569234e-06 + vG[i]*uB[i] * -1.22772737397309e-05 + vG[i]*uR[i] * 1.13841702804964e-05 + vB[i]*uB[i] * 1.7492092442304e-05 + vB[i]*uR[i] * -1.58938429233485e-05 + uB[i]*uR[i] * 4.27327403522094e-07);
lw[i] = (float) ( -448.930553858234 + vR[i] * 0.832870555556629 + vG[i] * 0.507474688654034 + vB[i] * -0.377842763248779 + uB[i] * 0.182791270418106 + uR[i] * -0.154145242255666 + vR[i]*vG[i] * -3.15126819858549e-06 + vR[i]*vB[i] * 3.37923480729377e-06 + vR[i]*uB[i] * -9.5715595545297e-06 + vR[i]*uR[i] * 1.05366380252936e-05 + vG[i]*vB[i] * 5.37043431784374e-07 + vG[i]*uB[i] * 1.61703675259279e-05 + vG[i]*uR[i] * -1.91687551509404e-05 + vB[i]*uB[i] * -7.90622855677546e-06 + vB[i]*uR[i] * 8.8730320889194e-06 + uB[i]*uR[i] * 6.2892997326397e-07);
dbl[i] = (float) ( -76.9325807637272 + vR[i] * 0.138898658832221 + vG[i] * 0.986689044788108 + vB[i] * -0.144743819135444 + uB[i] * 0.0802381231949572 + uR[i] * -0.0702923002548373 + vR[i]*vG[i] * -9.42233715991225e-07 + vR[i]*vB[i] * 1.32192367246624e-06 + vR[i]*uB[i] * -5.55579705359501e-06 + vR[i]*uR[i] * 5.91896028940055e-06 + vG[i]*vB[i] * -1.49774441644537e-07 + vG[i]*uB[i] * 6.13911469536767e-06 + vG[i]*uR[i] * -7.73356167788961e-06 + vB[i]*uB[i] * -4.59000083708328e-07 + vB[i]*uR[i] * 1.34557059803799e-06 + uB[i]*uR[i] * 3.19911604701182e-07);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("uv", uv);
outStack.addSlice("sw", sw);
outStack.addSlice("mw", mw);
outStack.addSlice("lw", lw);
outStack.addSlice("dbl", dbl);
new ImagePlus("Output", outStack).show();

}
}
